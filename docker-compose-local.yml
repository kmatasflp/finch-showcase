version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka0:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka0:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  localstack:
    image: localstack/localstack
    ports:
      - "4566-4599:4566-4599"
    environment:
      SERVICES: sqs
      START_WEB: 0
      HOSTNAME: localstack
      DOCKER_HOST: unix:///var/run/docker.sock
      HOST_TMP_FOLDER: /tmp/localstack
      HOSTNAME_EXTERNAL: localstack
    volumes:
      - "/tmp/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  statsd:
    image: graphiteapp/graphite-statsd
    ports:
      - "80:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"
  app:
    image: km/finch-showcase
    depends_on:
      - kafka0
      - localstack
      - statsd
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka0:29092
      OUTPUT_TOPIC: test
      SQS_QUEUE_URL: http://localstack:4576/000000000000/Test
      AWS_REGION: us-east-1
      AWS_SQS_ENPOINT: http://localstack:4576
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
      METRICS_PORT: 2004
      METRICS_HOST: statsd
      CONTAINER_ID: some-container-id
      DOMAIN: localhost
